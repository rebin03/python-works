Polymorphism
------------

• The word polymorphism means having many forms. 
• In programming, polymorphism means the same function name (but different signatures) being used for different types. 
• The key difference is the data types and number of arguments used in function.

-> Example of inbuilt polymorphic functions:

    # len() being used for a string
    print(len("geeks"))

    # len() being used for a list
    print(len([10, 20, 30]))

=> In python, polymorphism can achieved by following concept:

    • Duck typing
    • Operator overloading
    • Method overloading
    • Method overriding

1. Duck typing:

    - Duck Typing is a type system used in dynamic languages(Python, Perl, Ruby, PHP, Javascript, etc.)
    - where the type or the class of an object is less important than the method it defines.
    - Using Duck Typing, we do not check types at all. Instead, we check for the presence of a given method or attribute.
    - Therefore, what really matters is if the object has particular attributes at run time.

2. Operator overloading:

    - Operator Overloading means giving extended meaning beyond their predefined operational meaning.
    - For example operator + is used to add two integers as well as join two strings and merge two lists.
    - It is achievable because ‘+’ operator is overloaded by int class and str class.
    - Same built-in operator or function shows different behavior for objects of different classes, this is called Operator Overloading. 

    => In python, this is achieved by Dunder/Magic methods
        » Python Magic methods are the methods starting and ending with double underscores ‘__’.
        » They are defined by built-in classes in Python and commonly used for operator overloading. 
        » They are also called Dunder methods, Dunder means “Double Under (Underscores)”.

3. Method overloading:

    - Two or more methods have the same name but different numbers of parameters or different types of parameters, or both.
    - These methods are called overloaded methods and this is called method overloading. 
    - Like other languages (for example, method overloading in C++) do, python does not support method overloading by default.
    - But there are different ways to achieve method overloading in Python. 
        => To achieve this we need to use default default argument or arbitary argument(*args)
    - The problem with method overloading in Python is that we may overload the methods but can only use the latest defined method. 

4. Method overriding:

    - Method overriding is an ability of any object-oriented programming language that allows a subclass or child class
      to provide a specific implementation of a method that is already provided by one of its super-classes or parent classes. 
    - When a method in a subclass has the same name, the same parameters or signature, and same return type(or sub-type) 
      as a method in its super-class, then the method in the subclass is said to override the method in the super-class.