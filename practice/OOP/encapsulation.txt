Encapsulation
--------------
- bundling the data (attributes) and methods (functions) that operate on the data into a single unit, called a class.
- This concept helps hide the internal state of an object from the outside world, providing a controlled interface 
  for interacting with the object’s data and methods.

• Encapsulation in Python is implemented using access specifiers to control access to class members

=> What are Key Differences Between Encapsulation and Abstraction?

Encapsulation:
• Definition: The bundling of data and methods that operate on the data into a single unit, with controlled access to the internal state.
• Purpose: To protect an object’s internal state and expose a controlled interface.
• Implementation: Achieved through private and protected members.

Abstraction:
• Definition: The concept of hiding complex implementation details and showing only the essential features of an object.
• Purpose: To simplify interaction with objects by focusing on high-level operations rather than implementation details.
• Implementation: Achieved through abstract classes and methods, interfaces, and high-level class design.
